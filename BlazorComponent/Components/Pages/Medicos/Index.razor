@page "/medicos"
@rendermode InteractiveServer

@using BlazorComponent.Components.Pages.Headers
@inject MedicoService _medicoService
@inject NavigationManager _navigation

<CustomHeader>
    Listagem de Médicos
</CustomHeader>
<button class="btn btn-primary" @onclick="() => NovoMedico()">Novo Médico</button>

<table class="table table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>CRM</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @if (Medicos != null)
        {
            @foreach (var medico in Medicos)
            {
                <tr>
                    <td>@medico.Id</td>
                    <td>@medico.Name</td>
                    <td>@medico.CRM</td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditarMedico(medico.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => ExcluirMedico(medico.Id)">Excluir</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<Medico>? Medicos;

    protected override async Task OnInitializedAsync()
    {
        Medicos = await _medicoService.GetAllMedicosAsync();
    }

    private void NovoMedico()
    {
        _navigation.NavigateTo("/medicos/create");
    }

    private void EditarMedico(int id)
    {
        _navigation.NavigateTo($"/medicos/edit/{id}");
    }

    private async Task ExcluirMedico(int id)
    {
        await _medicoService.RemoveMedicoAsync(id);
        Medicos = await _medicoService.GetAllMedicosAsync();
    }
}
